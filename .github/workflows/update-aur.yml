name: Update AUR Packages

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to publish"
        required: true
  workflow_run:
    workflows: ["Build and Release"]
    types:
      - completed
  release:
    types: [released]

jobs:
  update-aur:
    runs-on: ubuntu-latest
    container:
      image: archlinux
    strategy:
      matrix:
        variant: ["stable", "ptb", "canary"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up environment
        run: |
          pacman -Sy --noconfirm base-devel git curl wget openssh
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Get release version
        id: get_version
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            version=${{ github.event.release.name }}
            echo "version=${version#v}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            version=${{ github.event.inputs.version }}
            echo "version=${version#v}" >> $GITHUB_OUTPUT
          fi

      - name: Download release assets
        run: |
          mkdir -p assets
          wget "https://github.com/MeguminSama/moonlight-launcher/releases/download/v${{ steps.get_version.outputs.version }}/moonlight-${{ matrix.variant }}-v${{ steps.get_version.outputs.version }}.tar.gz" -O assets/moonlight-${{ matrix.variant }}.tar.gz
        if: steps.get_version.outputs.version

      - name: Calculate SHA256 sums
        id: sha256sum
        run: |
          echo "sha256=$(sha256sum assets/moonlight-${{ matrix.variant }}.tar.gz | awk '{print $1}')" >> $GITHUB_OUTPUT
          echo "desktop_sha256=$(sha256sum .github/aur/moonlight-${{ matrix.variant }}.desktop | awk '{print $1}')" >> $GITHUB_OUTPUT

      - name: Create package files
        run: |
          mkdir -p pkgbuild

          # Copy .desktop file from repository
          cp .github/aur/moonlight-${{ matrix.variant }}.desktop pkgbuild/moonlight-${{ matrix.variant }}.desktop

          # Copy LICENSE file from repository
          cp .github/aur/LICENSE pkgbuild/LICENSE

          # Generate PKGBUILD
          cat > pkgbuild/PKGBUILD <<EOF
          # Maintainer: rie_t <megumin at megu dot dev>
          pkgname=moonlight-${{ matrix.variant }}-bin
          _pkgname=moonlight-${{ matrix.variant }}
          pkgver=${{ steps.get_version.outputs.version }}
          pkgrel=1
          pkgdesc="A convenient launcher for the moonlight Discord mod (${{ matrix.variant }})"
          arch=('x86_64')
          url="https://github.com/MeguminSama/moonlight-launcher"
          license=("GPL-3.0-only")
          provides=("\${_pkgname}")

          depends=("libmoonlight-launcher")
          optdepends=("discord: An install of Discord is required to run the launcher")

          source=(
              "\$pkgname-\$pkgver.tar.gz::https://github.com/MeguminSama/moonlight-launcher/releases/download/v\${pkgver}/moonlight-${{ matrix.variant }}-v\${pkgver}.tar.gz"
              "\${_pkgname}.desktop"
          )
          sha256sums=(
              "${{ steps.sha256sum.outputs.sha256 }}"
              "${{ steps.sha256sum.outputs.desktop_sha256 }}"
          )

          package() {
              install -Dm755 "\${srcdir}/moonlight-${{ matrix.variant }}" "\${pkgdir}/usr/bin/\${_pkgname}"
              install -Dm755 "\${_pkgname}.desktop" "\${pkgdir}/usr/share/applications/\${_pkgname}.desktop"

              _icon_sizes=("16x16" "32x32" "48x48" "64x64" "128x128" "256x256" "512x512" "1024x1024")
              for _size in "\${_icon_sizes[@]}"; do
                  install -Dm644 "\${srcdir}/icons/icon-\${_size}.png" "\${pkgdir}/usr/share/icons/hicolor/\${_size}/apps/\${_pkgname}.png"
              done
          }
          EOF

      - name: Generate .SRCINFO
        run: |
          cd pkgbuild
          useradd makepkg
          chown makepkg:root . -R
          su makepkg -c "makepkg --printsrcinfo" > .SRCINFO
          cd ..

      - name: Clone AUR repository
        run: |
          git -c init.defaultBranch=master clone "ssh://aur@aur.archlinux.org/moonlight-${{ matrix.variant }}-bin.git" aur-${{ matrix.variant }}
          cd aur-${{ matrix.variant }}
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Update AUR package
        run: |
          cp pkgbuild/* aur-${{ matrix.variant }}/
          cd aur-${{ matrix.variant }}

          # Check if there are changes
          if ! git diff --exit-code; then
            git add .
            git commit -m "Update to version ${{ steps.get_version.outputs.version }}"
            git push origin master
          else
            echo "No changes detected"
          fi
        env:
          GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no -i ${{ secrets.AUR_SSH_PRIVATE_KEY }}"
